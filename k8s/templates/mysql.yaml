{{- if .Values.mysql.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: {{ .Values.global.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.mysql.storageSize }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.mysql.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      imagePullSecrets:
        - name: dockerhub-auth
      containers:
        - name: mysql
          image: {{ .Values.mysql.image }}
          args:
            - "--default-authentication-plugin=mysql_native_password"
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: trace-secrets
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_ROOT_HOST
              value: "%"
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
          livenessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - localhost
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - localhost
            initialDelaySeconds: 5
            periodSeconds: 3
            timeoutSeconds: 5
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: init-script
          configMap:
            name: mysql-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    app: mysql
  ports:
    - port: {{ .Values.mysql.port }}
      targetPort: 3306
      protocol: TCP
      name: mysql
{{- end }}