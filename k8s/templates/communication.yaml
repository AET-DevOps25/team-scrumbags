{{- if .Values.communication.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: communication
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.communication.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: communication
  template:
    metadata:
      labels:
        app: communication
    spec:
      containers:
        - name: communication
          image: {{ .Values.communication.image }}
          ports:
            - containerPort: {{ .Values.communication.port }}
          env:
            - name: SERVER_PORT
              value: "{{ .Values.communication.port }}"
            - name: COMM_DB_USER
              valueFrom:
                secretKeyRef:
                  name: trace-secrets
                  key: COMM_DB_USER
            - name: COMM_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: trace-secrets
                  key: COMM_DB_PASSWORD
            - name: COMM_DISCORD_SECRET
              valueFrom:
                secretKeyRef:
                  name: trace-secrets
                  key: COMM_DISCORD_SECRET
                  optional: true
          envFrom:
            - configMapRef:
                name: trace-config
          # Add this to debug environment variables
          command: ["/bin/sh"]
          args: ["-c", "echo 'DB User:' $COMM_DB_USER && echo 'DB URL:' $COMM_DB_URL && java -jar /app/app.jar"]
      initContainers:
        - name: wait-for-mysql
          image: busybox:1.35
          command: [ 'sh', '-c', 'until nc -z mysql-service {{ .Values.mysql.port }}; do sleep 1; done' ]
---
apiVersion: v1
kind: Service
metadata:
  name: communication-service
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    app: communication
  ports:
    - port: {{ .Values.communication.port }}
      targetPort: {{ .Values.communication.port }}
{{- end }}