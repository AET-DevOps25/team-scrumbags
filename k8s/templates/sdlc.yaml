{{- if .Values.sdlc.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sdlc
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.sdlc.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sdlc
  template:
    metadata:
      labels:
        app: sdlc
    spec:
      initContainers:
        - name: wait-for-postgres
          image: postgres:alpine
          command:
            - sh
            - -c
            - |
              until pg_isready -h postgresql-service -p {{ .Values.postgresql.port }}; do
                echo "Waiting for PostgreSQL on port {{ .Values.postgresql.port }}..."
                sleep 2
              done
      containers:
        - name: sdlc-connector
          image: {{ .Values.sdlc.image }}
          ports:
            - containerPort: {{ .Values.sdlc.port }}
          envFrom:
            - configMapRef:
                name: trace-config
            - secretRef:
                name: trace-secrets
          env:
            - name: SERVER_PORT
              value: "{{ .Values.sdlc.port }}"
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: trace-config
                  key: SDLC_DB_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: trace-secrets
                  key: POSTGRES_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: trace-secrets
                  key: POSTGRES_PASSWORD
            - name: TRACE_PROJECT_MANAGEMENT_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: trace-config
                  key: TRACE_PROJECT_MANAGEMENT_BASE_URL
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: trace-config
                  key: SDLC_MODE
            - name: TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: trace-secrets
                  key: SDLC_TOKEN_SECRET
            - name: KEYCLOAK_AUTH_URL
              value: "https://keycloak.{{ .Values.ingress.host }}"
            - name: KEYCLOAK_REALM
              value: "{{ .Values.environment.keycloakRealm }}"
            - name: GENAI_URL
              value: "http://genai-service:{{ .Values.genai.port }}"
---
apiVersion: v1
kind: Service
metadata:
  name: sdlc-service
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    app: sdlc
  ports:
    - port: {{ .Values.sdlc.port }}
      targetPort: {{ .Values.sdlc.port }}
{{- end }}