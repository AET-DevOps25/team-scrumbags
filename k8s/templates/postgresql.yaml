{{- if .Values.postgresql.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: {{ .Values.global.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgresql.storageSize }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.postgresql.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: {{ .Values.postgresql.image }}
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: trace-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: trace-secrets
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: init-script
          configMap:
            name: postgres-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    app: postgresql
  ports:
    - port: {{ .Values.postgresql.port }}
      targetPort: 5432
{{- end }}