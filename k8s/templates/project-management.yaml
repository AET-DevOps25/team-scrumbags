{{- if .Values.projectManagement.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-management
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.projectManagement.replicas }}
  selector:
    matchLabels:
      app: project-management
  template:
    metadata:
      labels:
        app: project-management
    spec:
      initContainers:
        - name: wait-for-postgres
          image: postgres:alpine
          command:
            - sh
            - -c
            - |
              until pg_isready -h postgresql-service -p {{ .Values.postgresql.port }}; do
                echo "Waiting for PostgreSQL on port {{ .Values.postgresql.port }}..."
                sleep 2
              done
      containers:
        - name: project-management
          image: {{ .Values.projectManagement.image }}
          ports:
            - containerPort: {{ .Values.projectManagement.port }}
          envFrom:
            - configMapRef:
                name: trace-config
            - secretRef:
                name: trace-secrets
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: trace-config
                  key: DB_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: trace-secrets
                  key: POSTGRES_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: trace-secrets
                  key: POSTGRES_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: project-management-service
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    app: project-management
  ports:
    - port: {{ .Values.projectManagement.port }}
      targetPort: {{ .Values.projectManagement.port }}
{{- end }}