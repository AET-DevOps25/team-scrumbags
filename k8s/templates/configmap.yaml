apiVersion: v1
kind: ConfigMap
metadata:
  name: trace-config
  namespace: {{ .Values.global.namespace }}
data:
  # Global
  DEBUG: {{ .Values.environment.debug | quote }}
  KEYCLOAK_REALM: {{ .Values.environment.keycloakRealm }}
  KEYCLOAK_CLIENT_ID: {{ .Values.environment.keycloakClient }}
  KEYCLOAK_AUTH_URL: "http://keycloak-service:{{ .Values.keycloak.port }}"
  KEYCLOAK_INTERNAL_URL: "http://keycloak-service:{{ .Values.keycloak.port }}/auth"
  KEYCLOAK_URL: "https://{{ .Values.ingress.host }}/auth" #todo: use in client
  RABBITMQ_HOST: "rabbitmq-service"
  RABBITMQ_URL: "amqp://guest:guest@rabbitmq-service/"

  # Project Management
  DB_URL: "jdbc:postgresql://postgresql-service:{{ .Values.postgresql.port }}/pm-db"

  # SDLC
  SDLC_DB_URL: "jdbc:postgresql://postgresql-service:{{ .Values.postgresql.port }}/sdlc-db"
  SDLC_MODE: {{ .Values.environment.sdlcMode }}
  TRACE_PROJECT_MANAGEMENT_BASE_URL: "http://project-management-service:{{ .Values.projectManagement.port }}"

  # Communication
  COMM_DB_URL: "jdbc:mysql://mysql-service:{{ .Values.mysql.port }}/comms-db?createDatabaseIfNotExist=true"
  COMM_DISCORD_BOT_ID: {{ .Values.environment.commDiscordBotId | quote }}
  COMM_DISCORD_API_VERSION: {{ .Values.environment.commDiscordApiVersion }}
  COMM_DISCORD_BASE_URL: {{ .Values.environment.commDiscordBaseUrl }}
  TRACE_GENAI_BASE_URL: "http://genai-service:{{ .Values.genai.port }}"

  # Transcription
  SPRING_DATASOURCE_URL: "jdbc:mysql://mysql-service:{{ .Values.mysql.port }}/trans-db?createDatabaseIfNotExist=true"
  USE_WHISPERX: {{ .Values.environment.useWhisperx | quote }}
  USE_CLOUD: {{ .Values.environment.useCloud | quote }}
  TRANSCRIPTION_TIMEOUT: {{ .Values.environment.transcriptionTimeout | quote }}

  # GenAI
  MYSQL_HOST: "mysql-service"
  MYSQL_USER: "root"
  MYSQL_DB: "genai-db"
  MYSQL_PORT: {{ .Values.mysql.port | quote }}
  WEAVIATE_URL: "http://weaviate-service:{{ .Values.weaviate.port }}"
  OLLAMA_LOCAL_URL: "http://ollama-service:{{ .Values.ollama.port }}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: proxy-headers
  namespace: {{ .Values.global.namespace }}
data:
  X-Forwarded-Proto: "https"
  X-Forwarded-Host: "{{ .Values.ingress.host }}"
  X-Forwarded-Prefix: "/auth"