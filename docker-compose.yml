services:
  reverse-proxy:
    image: traefik:v3.4
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=test@test.de"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    environment:
      - API_URL=${API_URL:-https://${DOMAIN:-localhost}/project-management}
      - KEYCLOAK_URL=${KEYCLOAK_URL:-https://${DOMAIN:-localhost}/keycloak}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM:-trace}
      - KEYCLOAK_CLIENT=${KEYCLOAK_CLIENT:-trace-api}
      - KEYCLOAK_REDIRECT_URL=${KEYCLOAK_REDIRECT_URL:-https://${DOMAIN:-localhost}}
      - DEBUG=${DEBUG:-false}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`${DOMAIN:-localhost}`)"
      - "traefik.http.services.client.loadbalancer.server.port=80"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.client-compress.compress=true"
      - "traefik.http.routers.client.middlewares=client-compress"

  project-management:
    build:
      context: ./project-management
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - project-db
    environment:
      - DEBUG=${DEBUG:-false}
      - DB_URL=jdbc:postgresql://project-db:5432/project-db
      - DB_USER=${PROJECT_DB_USER:-user}
      - DB_PASSWORD=${PROJECT_DB_PASSWORD:-test}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM:-trace}
      - KEYCLOAK_AUTH_URL=https://${DOMAIN:-localhost}/keycloak
      - KEYCLOAK_ADMIN_USERNAME=${KEYCLOAK_ADMIN_USERNAME:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-admin}
      - SERVER_PORT=8080
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.project-management.rule=Host(`${DOMAIN:-localhost}`) && PathPrefix(`/project-management`)"
      - "traefik.http.services.project-management.loadbalancer.server.port=8080"
      - "traefik.http.routers.project-management.entrypoints=websecure"
      - "traefik.http.routers.project-management.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.strip-project-management.stripprefix.prefixes=/project-management"
      - "traefik.http.routers.project-management.middlewares=strip-project-management"

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.5
    command:
      - start-dev
      - --import-realm
      - --proxy-headers=xforwarded # configure keycloak for reverse proxy
      - --http-relative-path=/keycloak
    ports:
      - "8081:8080"
    environment:
      KC_HOSTNAME: ${DOMAIN:-localhost}
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_PROXY_HEADERS: xforwarded
      KC_HTTP_RELATIVE_PATH: /keycloak
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USERNAME:-admin}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
    volumes:
      - ./project-management/keycloak/:/opt/keycloak/data/import/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`${DOMAIN:-localhost}`) && PathPrefix(`/keycloak`)"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.tls.certresolver=letsencrypt"
      
  project-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-test}
      POSTGRES_DB: project-db
    ports:
      - "5432:5432"
    volumes:
      - project_db_data:/var/lib/postgresql/data

  # prometheus:
  #   image: prom/prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"
  #   depends_on:
  #     - project-management

  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - prometheus

volumes:
  project_db_data:
