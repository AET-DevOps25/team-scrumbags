name: Genai build python
on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'genai/**'
  pull_request:
    paths:
      - 'genai/**'
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./genai

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: summaries
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -ppassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      rabbitmq:
        image: rabbitmq:management
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd="rabbitmq-diagnostics -q ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      weaviate:
        image: cr.weaviate.io/semitechnologies/weaviate:1.31.2
        env:
          QUERY_DEFAULTS_LIMIT: 25
          AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
          PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
          ENABLE_API_BASED_MODULES: 'true'
          CLUSTER_HOSTNAME: 'node1'
        ports:
          - 8080:8080
          - 50051:50051
        options: >-
          --health-cmd="wget --no-verbose --tries=1 --spider http://localhost:8080/v1/.well-known/ready || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

      - name: Wait for services to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          while ! mysqladmin ping -h"127.0.0.1" -P3306 -u root -password --silent; do
            echo "MySQL is unavailable - sleeping"
            sleep 2
          done
          echo "MySQL is ready!"

          echo "Waiting for RabbitMQ to be ready..."
          while ! curl -f http://127.0.0.1:15672/api/overview -u guest:guest --silent; do
            echo "RabbitMQ is unavailable - sleeping"
            sleep 2
          done
          echo "RabbitMQ is ready!"

          echo "Waiting for Weaviate to be ready..."
          while ! curl -f http://127.0.0.1:8080/v1/.well-known/ready --silent; do
            echo "Weaviate is unavailable - sleeping"
            sleep 2
          done
          echo "Weaviate is ready!"

      - name: Set environment variables for testing
        run: |
          echo "MYSQL_URL=mysql+asyncmy://user:password@127.0.0.1:3306/summaries" >> $GITHUB_ENV
          echo "RABBITMQ_URL=amqp://guest:guest@127.0.0.1/" >> $GITHUB_ENV
          echo "WEAVIATE_URL=http://127.0.0.1:8080/" >> $GITHUB_ENV
          echo "NOMIC_API_KEY=test-key" >> $GITHUB_ENV
          echo "OLLAMA_LOCAL_URL=http://127.0.0.1:11434/" >> $GITHUB_ENV

      - name: Run tests
        env:
          MYSQL_URL: mysql+asyncmy://user:password@127.0.0.1:3306/summaries
          RABBITMQ_URL: amqp://guest:guest@127.0.0.1/
          WEAVIATE_URL: http://127.0.0.1:8080/
          NOMIC_API_KEY: test-key
          OLLAMA_LOCAL_URL: http://127.0.0.1:11434/
        run: PYTHONPATH=. pytest tests/ -v --cov=app --cov-report=term-missing